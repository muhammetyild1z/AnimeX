@model List<EntityLayer.AnimeBolums>
@{
    ViewData["Title"] = "Izle";
    Layout = "~/Views/CustomerLayout/Index.cshtml";
}

<style>


    img {
        border: 1px solid black;
        margin-right: 20px;
    }

    .base img {
        width: 100%;
        max-height: 900px
    }

    .cover img {
        object-fit: cover;
    }
</style>


<section class="base cover" style="    max-height: 340px;">

    <img style="" src="@ViewBag.AnimeKapakImg" class="img-fluid" alt="Responsive image">

</section>

@await Component.InvokeAsync("_AnimeDetay" ,new { animeID=ViewBag.AnimeID})

<!-- Breadcrumb Begin -->
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__links">
                    <a href="/Home/Index/"><i class="fa fa-home"></i> Anasayfa</a>
                    <a href="/Animeler/Index/">Anime İzle</a>
                    <span>@ViewBag.AnimeName</span>

                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Anime Section Begin -->
<section class="anime-details spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 ">


                <div class="anime__video__player">
                    <iframe width="100%" height="600" frameborder="0" src="@ViewBag.BolumUrl" allowfullscreen></iframe>

                 @*   @await Component.InvokeAsync("_AnimeIzleVideoPlayer")
                  *@
                </div>


                <div class="anime__details__episodes">
                    <div class="section-title">
                        <h5>Sezonlar</h5>
                    </div>
             
                    @await Component.InvokeAsync("_AnimeIzleSezonlar" ,new { animeID=ViewBag.AnimeID})




                </div>
                <div class="anime__details__episodes">
                    <div class="section-title">
                        <h5>Bölümler</h5>
                    </div>

                    @foreach (var item in Model)
                    {


                        @Html.ActionLink(@item.BolumNo+ ".Bolüm", "Izle", "AnimeIzle", new { AnimeID_Sezon=item.BolumAnimeID, bolumUrl=item.BolumUrl})

                    }
                    @*  @await Component.InvokeAsync("_AnimeIzleBolumler" ,new { animeID=ViewBag.AnimeID , BolumNo})*@


                </div>


            </div>
        </div>

        @await Component.InvokeAsync("_Comments" ,new { animeID=ViewBag.AnimeID})
    </div>
</section>
<!-- Anime Section End -->
