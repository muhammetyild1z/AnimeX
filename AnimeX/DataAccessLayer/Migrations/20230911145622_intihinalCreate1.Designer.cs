// <auto-generated />
using System;
using AnimeX.DataAccessLayer.Concrate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeX.DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230911145622_intihinalCreate1")]
    partial class intihinalCreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Animeler", b =>
                {
                    b.Property<int>("AnimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimeID"), 1L, 1);

                    b.Property<string>("AnimeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AnimeCikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnimeDetay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AnimeEklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnimeKisaDetay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnimeUyarlamasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryAnimeID")
                        .HasColumnType("int");

                    b.Property<string>("IMDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Like")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("AnimeID");

                    b.HasIndex("CategoryAnimeID");

                    b.ToTable("Animelers");
                });

            modelBuilder.Entity("EntityLayer.Categories", b =>
                {
                    b.Property<int>("kategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kategoriID"), 1L, 1);

                    b.Property<int?>("CategoryAnimeID")
                        .HasColumnType("int");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("kategoriID");

                    b.HasIndex("CategoryAnimeID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EntityLayer.CategoryAnime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AnimeID")
                        .HasColumnType("int");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CategoryAnimes");
                });

            modelBuilder.Entity("EntityLayer.Animeler", b =>
                {
                    b.HasOne("EntityLayer.CategoryAnime", null)
                        .WithMany("animelers")
                        .HasForeignKey("CategoryAnimeID");
                });

            modelBuilder.Entity("EntityLayer.Categories", b =>
                {
                    b.HasOne("EntityLayer.CategoryAnime", null)
                        .WithMany("categories")
                        .HasForeignKey("CategoryAnimeID");
                });

            modelBuilder.Entity("EntityLayer.CategoryAnime", b =>
                {
                    b.Navigation("animelers");

                    b.Navigation("categories");
                });
#pragma warning restore 612, 618
        }
    }
}
